<?import javafx.collections.FXCollections?>
<?import javafx.scene.control.*?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.text.Font?>
<?import java.lang.*?>
<GridPane xmlns:fx="http://javafx.com/fxml"
          fx:controller="Controller" alignment="center" hgap="10" vgap="10">
    <!--          gridLinesVisible="true">-->

    <!--    BUTTON CONTROL  -->
    <Button GridPane.rowIndex="0" GridPane.columnIndex="0" text="Click Me.">
        <graphic>
            <ImageView>
                <!--                We can add image here in a button.              -->
            </ImageView>
        </graphic>
    </Button>


    <!--    LABEL CONTROL   -->
    <Label GridPane.rowIndex="0" GridPane.columnIndex="1" text="This is Label."
           textFill="blue" wrapText="true">
        <font>
            <Font name="Arial italic" size="12"/>
        </font>
        <graphic>
            <ImageView>
                <!--            We can add image here in the Label      -->
            </ImageView>
        </graphic>
    </Label>


    <!--    RADIO BUTTON    -->
    <fx:define>
        <ToggleGroup fx:id="colorToggleGroup"/>
    </fx:define>

    <VBox GridPane.rowIndex="0" GridPane.columnIndex="2">
        <RadioButton text="Red" toggleGroup="$colorToggleGroup"/>
        <RadioButton text="Blue" toggleGroup="$colorToggleGroup" selected="true"/>
        <RadioButton text="Green" toggleGroup="$colorToggleGroup"/>
    </VBox>


    <!--    CHECKbOX    -->
    <VBox GridPane.rowIndex="0" GridPane.columnIndex="3">
        <CheckBox text="Dog" indeterminate="true"/>
        <CheckBox text="Cat" indeterminate="true"/>
        <CheckBox text="Cow" indeterminate="true"/>

    </VBox>


    <!--    TOGGLE BUTTON   -->
    <HBox GridPane.rowIndex="0" GridPane.columnIndex="4">
        <ToggleButton text="Toggle Me."/>
        <ToggleButton text="Welcome."/>
        <ToggleButton text="Bye."/>
    </HBox>


    <!--    TEXTFIELD-->

    <TextField GridPane.rowIndex="1" GridPane.columnIndex="0"/>

    <!--    PASSWORD    -->
    <PasswordField GridPane.rowIndex="1" GridPane.columnIndex="1"/>

    <!--    COMBOBOX    -->
    <ComboBox GridPane.rowIndex="1" GridPane.columnIndex="2" GridPane.columnSpan="3">
        <items>
            <FXCollections fx:factory="observableArrayList">
                <String fx:value="Option 1"/>
                <String fx:value="Option 2"/>
                <String fx:value="Option 3"/>
                <String fx:value="Option 4"/>
                <String fx:value="Option 5"/>
            </FXCollections>
        </items>

        <value>
            <String fx:value="Option 4"/>
            <!--            Sets default value of combo box as Option 4     -->
        </value>
    </ComboBox>


    <!-- CHOICE BOX    -->
    <ChoiceBox GridPane.rowIndex="1" GridPane.columnIndex="3" GridPane.columnSpan="3">
        <items>
            <FXCollections fx:factory="observableArrayList">
                <String fx:value="Option 1"/>
                <String fx:value="Option 2"/>
                <String fx:value="Option 3"/>
                <String fx:value="Option 4"/>
                <String fx:value="Option 5"/>
            </FXCollections>
        </items>

        <value>
            <String fx:value="Option 1"/>
            <!--            Sets default value of combo box as Option 4     -->
        </value>
    </ChoiceBox>


    <!--    SLIDER  -->
    <Slider GridPane.rowIndex="2" GridPane.columnIndex="0" GridPane.columnSpan="4" min="0" max="100"
            showTickLabels="true" showTickMarks="true" minorTickCount="4"/>


    <!--    SPINNER -->
    <Spinner GridPane.rowIndex="2" GridPane.columnIndex="4" min="0" max="100" initialValue="50"/>


    <!--    COLOR PICKER    -->
    <ColorPicker GridPane.rowIndex="3" GridPane.columnIndex="0"/>

    <!--    DATE PICKER -->
    <DatePicker GridPane.rowIndex="3" GridPane.columnIndex="1"/>

</GridPane>

        <!--

        1. RADIO BUTTON
           Radio button can be selected or deselected. We normally don't use a single radio button control alone. When we want the user to
            choose only 1 of several options, we group radio button controls together so that when the user selects 1 radio button, the
            others are automatically get deselected.
            Now this type of control is called a radio button.

            If we don't group the radio buttons then all of the radio buttons get selected at a time and we will not be able to see the
            radio buttons behaviour. To see the radio buttons behaviour, we need to group them and that group is called toggle group.

             i.  Toggle Group
                  Now the radio button class extends from toggle button class. The toggle buttons can be added to toggle group but the main thing
                  to note that right now we have only radio button control which extends from toggle button and there are no other control which
                  extends from toggle button.

             ii.     <fx:define>
                         <ToggleGroup fx:id="colorToggleGroup"/>
                     </fx:define>
                Now toggle button class doesn't decends from Node class and therefore can't be added to scene graph(in Main class where we
                use setScene method to build scene). Because of that we have to use fx:define element in fxml to use this toggle group.
                In general, we use the fx:define when we need to add something in fxml that isn't part of scene graph.

            iii. selected ="true"
                 Now when we use radio buttons we want 1 default option to be selected automatically. For that we use the selected property of
                 radio button to true, here blue button.


        2. CHECK BOX
           Checkbox allows the user to tick the box like to subscribe a newsletter. If we don't want to subscribe, we leave the checkbox as
           it is. Unlike radio buttons, we can select more than 1 options in checkboxes. We can't group checkboxes in toggle group because
           it doesn't decends from toggle button class. But we can group the checkboxes visually in VBox or HBox.

           i. <CheckBox text="Dog" indeterminate="true"/>
               Now there are 3 states of checkbox

                1. On : Box will be checked automatically

                2. Off : Box will be unchecked automatically

                3. Indeterminate : There will be dash in the box. But once the box is checked, then we can only check and uncheck that box.
                        We will not be able to return to dashed condition.

                3 state is recommended to use.


        3. TOGGLE BUTTON
            Like radio buttons, we can use toggle button control which allows the user to select only one button at a time. Only one toggle
            button will be highlighted at a time. For that also, we need to group them in toggle group.

        4. TEXT FIELD
            This control enable the user to type something some information in the application so that we can actually interpret those
             results and perform some action with that data. A textfield won't be long usually. They are a few words because this is a single
            line field.

        5. PASSWORD
           like textfield, we can also use the password control to allow the user to enter password. Difference is that in textfield control,
           we can see the text that what actually the user is typing, but in password control, we won't be able to see the actual text.
           We can see the dots or stars.


        6. COMBOBOX
             Combo Box is another way to offer the user a choice of several options where they can only choose 1 as we did in radio buttons.
             Now the user wants to choose among 10 options then radio buttons will not be a better choice because it will take up too much
              space to show all those 10 options. But with combo Box, we can show all 10 options using less space. It is like drop down box or
              pull down box.

        7. CHOICE BOX
           It is similar to Combo Box with a basic difference that when we drop the list in Choice Box, we can see the tick beside the
            option which is selected but this is not so in Combo Box.


        8. SLIDER
          This control is used when we want to set numeric value and its perfect for that so it consists of a tract and a thumb(circle)
          that the user can drag.

                <Slider GridPane.rowIndex="2" GridPane.columnIndex="0" GridPane.columnSpan="4" min="0" max="100"
                   showTickLabels="true" showTickMarks="true" minorTickCount="4"/>

                     i. showtickmarks
                            This will allow to show sub division between the major division (here 50 and 75)

                     ii. Showticklabel
                            This will allow to show major division in the slide

                     iii. minortickcount
                             This enables the slider control to decide how many sub division/tickes should be there between the major division.

        9. SPINNER
            It is also used to set numeric values but it is more precise than slider because it allows to set values one by one.

        10. COLORPICKER
             Allows the user to set color

        11. DATEPICKER
             Allows the user to set date.

         -->


























